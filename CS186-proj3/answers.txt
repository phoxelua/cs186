Describe any design decisions you made. These may be minimal for Project 1.
- Tuple & TupleDesc: I used an array for easy merging. I also assumed that it would be relatively small and would mostly be accessed by scanning so there would need for a hashmap.
- Catalog: Two hashmaps were used, one to map table names to tables and one to map table id to tablenames. I assummed catalogs would be used mainly for equality / lookup accesses.
- HeapFile: I created a new HeapFileIterator class that implements DbFileIterator since it was necessary to check for next and get next items in exercise 5 and 6.

Discuss and justify any changes you made to the API.
- No changes were made to the API.

Describe any missing or incomplete elements of your code.
- None that I am aware of- all tests past.

Describe briefly who worked on what (if you worked with a partner).
- N/A.

Describe how long you (and your partner) spent on the project, and whether there was anything you found particularly difficult or confusing.
- I spread the project over a week so probably <15 hours total. The most difficult thing was learning to use the API and finding the right methods to fill in the skeleton code. Also, SeqScan was particularly difficult since it was hard to do print statements and the unit tests were not comprehensive enough- passing all the unit tests didn't imply that those implementations were correct so I ended up accumulating errors all the way to exercise 6. But that was mainly my fault for not testing things out myself. 